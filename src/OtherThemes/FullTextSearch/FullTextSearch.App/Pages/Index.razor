@page "/"
@inject ElasticService _elastic


<div class="mt-2 mb-2 col-8">
	<SearchBar OnSearch="Search"/>
</div>

<div class="card col-3 bg-light">
	<span class="m-2"><b>Books</b>: @Books.Count</span>
</div>

<div style="display: flex">
	<div class="flex-grow-1 card overflow-auto mt-4" style="height: 400px;">
		<Virtualize Items="@Books" Context="book">
			<BookView Book="@book"/>
		</Virtualize>
	</div>

	<div class="m-4 flex-grow-1">
		<BookCreateView OnBookGenerated="AddBook"/>
	</div>

</div>
@code{
	private List<Book> Books { get; set; } = new();

	protected override async Task OnAfterRenderAsync(bool firstRender)
	{
		if (firstRender) await Search();
	}

	private void AddBook(Book book)
	{
		_elastic.IndexBook(book);
		StateHasChanged();
	}

	private async Task Search(BookQueryForm? queryData = null)
	{
		IReadOnlyCollection<Book> books;
		if (queryData is null or {IsEmpty: true})
		{
			books = await _elastic.LoadAll();
		}
		else
		{
			books = await _elastic.Search(queryData.Title);
		}
		
		Books.Clear();
		Books.AddRange(books);
		StateHasChanged();
	}
}
